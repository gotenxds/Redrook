// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace World
{

using global::System;
using global::FlatBuffers;

public struct WorldTile : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public WorldTile __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort SpriteIndex { get { return __p.bb.GetUshort(__p.bb_pos + 0); } }
  public void MutateSpriteIndex(ushort spriteIndex) { __p.bb.PutUshort(__p.bb_pos + 0, spriteIndex); }

  public static Offset<WorldTile> CreateWorldTile(FlatBufferBuilder builder, ushort SpriteIndex) {
    builder.Prep(2, 2);
    builder.PutUshort(SpriteIndex);
    return new Offset<WorldTile>(builder.Offset);
  }
};


}
